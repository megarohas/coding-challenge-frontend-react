{"version":3,"sources":["theme.ts","helpers/fetcher.js","components/case_list_item/case_list_item.tsx","components/case_list/case_list.tsx","components/case_count/case_count.tsx","components/beauty_btn/beauty_btn.tsx","components/find_cases_bar/find_cases_bar.tsx","components/paginator/paginator.tsx","components/index_page/index_page.tsx","helpers/parse_incedents.ts","components/header/header.tsx","components/case/case.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styled","default","css","injectGlobal","keyframes","ThemeProvider","CON_TIMEOUT","getResponseJson","response","json","then","data","isError","catch","e","request","url","method","body","JSON","stringify","Promise","resolve","reject","timeout","setTimeout","Error","fetch","Object","objectSpread","credentials","mode","headers","Headers","Access-Control-Allow-Origin","Accept","Content-Type","clearTimeout","status","checkStatus","other","objectWithoutProperties","error","get","CaseListItemWrapper","div","_templateObject","CaseListItemInfoWrapper","_templateObject2","CaseImg","img","_templateObject3","CaseListItem","_case","this","props","case","_date","Date","occurred_at","react","src","thumbnail_img","alt","href","concat","id","title","description","style","marginTop","toDateString","address","React","defaultProps","CaseList","cases","map","item","case_list_item","key","CaseCountWrapper","case_count_templateObject","CaseCount","case_count","BeautyBtnWrapper","beauty_btn_templateObject","inActive","BeautyBtn","_this","onClick","doAction","value","QueryInput","input","find_cases_bar_templateObject","width","DateInput","find_cases_bar_templateObject2","FindCasesBarWrapper","find_cases_bar_templateObject3","DateInputWrapper","_templateObject4","FindCasesBar","state","query","occurred_after","occurred_before","_this2","placeholder","onChange","setState","target","type","parse","toString","substr","length","beauty_btn","findCases","PaginatorWrapper","paginator_templateObject","Paginator","page","setPage","total_pages","Array","fill","generateIndexes","renderPage","renderPages","paginateCases","max","per_page","min","filter","index","inRange","IndexPage","all_cases","proximity","incident_type","is_loading","is_error","params","keys","k","encodeURIComponent","join","incidents","_cases","toConsumableArray","media","image_url_thumb","parseInt","Math","ceil","err","getCases","_this3","find_cases_bar","_ref","case_list","paginator","HeaderWrapper","a","header_templateObject","HeaderTextWrapper","header_templateObject2","HeaderBigText","header_templateObject3","HeaderLittleText","header_templateObject4","HeaderLogo","_templateObject5","Header","CaseWrapper","case_templateObject","Marker","case_templateObject2","case_templateObject3","CaseImgWrapper","case_templateObject4","ImgDescWrapper","case_templateObject5","DescWrapper","_templateObject6","MapWrapper","_templateObject7","Case","coordinates","is_loaded","match","incident","image_url","features","properties","forEach","geometry","reverse","lib_default","bootstrapURLKeys","center","defaultZoom","lat","lng","text","renderGoogleMap","case_CaseImg","AppWrapper","App_templateObject","AppRouter","react_router_dom","react_router","path","exact","component","App","header","Boolean","window","location","hostname","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.110b97f3.chunk.js","sourcesContent":["//@ts-ignore\nimport * as styledComponents from \"styled-components\";\n\nconst {\n  default: styled,\n  css,\n  injectGlobal,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<\n  IThemeInterface\n>;\n\nexport interface IThemeInterface {\n  color: string;\n}\n\nexport const theme = {\n  color: \"black\"\n};\n\nexport default styled;\nexport { css, injectGlobal, keyframes, ThemeProvider };\n","const CON_TIMEOUT = 999999999;\n\nexport function genParams(params) {\n  return Object.keys(params)\n    .map(k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n    .join(\"&\");\n}\n\nfunction checkStatus(response, resolve, reject) {\n  if (response.status >= 200 && response.status < 300) {\n    response.isError = false;\n    return response;\n  }\n  response.isError = true;\n  return response;\n}\n\nfunction getResponseJson(response) {\n  return response\n    .json()\n    .then(data => {\n      data.isError = response.isError;\n      return data;\n    })\n    .catch(e => {\n      return e;\n    });\n}\n\nfunction request(url, method, json) {\n  let body = method === \"GET\" ? {} : { body: JSON.stringify(json) };\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(function() {\n      reject(new Error(\"Request timed out\"));\n    }, CON_TIMEOUT);\n    return fetch(url, {\n      ...{\n        method,\n        credentials: \"same-origin\",\n        mode: \"cors\",\n        headers: new Headers({\n          \"Access-Control-Allow-Origin\": \"*\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=UTF-8\"\n        })\n      },\n      ...body\n    })\n      .then(response => {\n        clearTimeout(timeout);\n\n        return response;\n      })\n      .then(response => checkStatus(response, resolve, reject))\n      .then(getResponseJson)\n      .then(data => {\n        const { isError, ...other } = data;\n        if (isError) {\n          reject(other.error);\n        } else resolve(other);\n      })\n      .catch(error => reject(error));\n  });\n}\n\nexport function post(url, json) {\n  return request(url, \"POST\", json);\n}\n\nexport function get(url) {\n  return request(url, \"GET\", {});\n}\n\nexport function del(url, json) {\n  return request(url, \"DELETE\", json);\n}\n\nexport function put(url, json) {\n  return request(url, \"PUT\", json);\n}\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport { TCase } from \"../../types\";\nimport PropTypes from \"prop-types\";\n\ninterface ICaseListItemProps {\n  case: TCase;\n}\n\nconst CaseListItemWrapper = styled.div`\n  display: flex;\n  padding: 20px 10px;\n  border: 3px solid black;\n  margin-bottom: 20px;\n`;\nconst CaseListItemInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst CaseImg = styled.img`\n  width: 100px;\n  height: 100px;\n  margin-right: 15px;\n  min-width: 100px;\n  min-height: 100px;\n`;\n\nclass CaseListItem extends React.PureComponent<ICaseListItemProps> {\n  static propTypes: { [key in keyof ICaseListItemProps]: any } = {\n    case: PropTypes.object\n  };\n\n  public static defaultProps = {\n    case: {\n      title: \"\",\n      description: \"\",\n      id: 0,\n      thumbnail_img: \"\",\n      address: \"\",\n      occurred_at: 0\n    }\n  };\n  render() {\n    const _case: TCase = this.props.case;\n    const _date: Date = new Date(_case.occurred_at * 1000);\n    return (\n      <CaseListItemWrapper>\n        <CaseImg src={_case.thumbnail_img} alt=\"N/A\" />\n        <CaseListItemInfoWrapper>\n          <div>\n            <a href={`/case/${_case.id}`}>{`Case: ${_case.title}`}</a>\n            <div>{`Desc: ${_case.description}`}</div>\n          </div>\n          <div style={{ marginTop: \"10px\" }}>\n            {`${_date.toDateString()} - ${_case.address}`}\n          </div>\n        </CaseListItemInfoWrapper>\n      </CaseListItemWrapper>\n    );\n  }\n}\n\nexport default CaseListItem;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport { TCase } from \"../../types\";\nimport CaseListItem from \"../case_list_item/case_list_item\";\nimport PropTypes from \"prop-types\";\n\ninterface ICaseListProps {\n  cases: Array<TCase>;\n}\n\nclass CaseList extends React.PureComponent<ICaseListProps> {\n  static propTypes: { [key in keyof ICaseListProps]: any } = {\n    cases: PropTypes.array\n  };\n\n  public static defaultProps = {\n    cases: []\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.cases.map((item: TCase) => (\n          <CaseListItem case={item} key={`case_list_item_${item.id}`} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CaseList;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport PropTypes from \"prop-types\";\n\ninterface ICaseCountProps {\n  case_count: number;\n}\n\nconst CaseCountWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 25px;\n  margin-bottom: 20px;\n`;\n\nclass CaseCount extends React.PureComponent<ICaseCountProps> {\n  static propTypes: { [key in keyof ICaseCountProps]: any } = {\n    case_count: PropTypes.number\n  };\n\n  public static defaultProps = {\n    case_count: 0\n  };\n\n  render() {\n    return (\n      <CaseCountWrapper>{`Total cases: ${\n        this.props.case_count\n      }`}</CaseCountWrapper>\n    );\n  }\n}\n\nexport default CaseCount;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport PropTypes from \"prop-types\";\n\ninterface IBeautyBtnProps {\n  value: string;\n  doAction(): void;\n  inActive?: boolean;\n}\nconst BeautyBtnWrapper = styled.div`\n  color:${(props: any) => (props.inActive ? \"white;\" : \"black;\")}\n  background-color:${(props: any) => (props.inActive ? \"black;\" : \"white;\")}\n  cursor: ${(props: any) => (props.inActive ? \"not-allowed;\" : \"pointer;\")}\n  box-shadow: ${(props: any) =>\n    props.inActive ? \"none\" : \"3px 3px 0px rgba(0, 0, 0, 1);\"}\n  border: 3px solid black;\n  font-family: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 8px;\n  font-size: 20px;\n  user-select: none;\n  &:active {\n    background-color: black;\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 1);\n    color: white;\n  }\n`;\n\nclass BeautyBtn extends React.PureComponent<IBeautyBtnProps> {\n  static propTypes: { [key in keyof IBeautyBtnProps]: any } = {\n    value: PropTypes.string,\n    doAction: PropTypes.func,\n    inActive: PropTypes.bool\n  };\n  public static defaultProps = {\n    value: \"\",\n    doAction: () => {},\n    inActive: false\n  };\n\n  render() {\n    return (\n      <BeautyBtnWrapper\n        inActive={this.props.inActive}\n        onClick={() => {\n          this.props.doAction();\n        }}\n      >\n        {this.props.value}\n      </BeautyBtnWrapper>\n    );\n  }\n}\n\nexport default BeautyBtn;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport { TCase } from \"../../types\";\nimport BeautyBtn from \"../beauty_btn/beauty_btn\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PropTypes from \"prop-types\";\n\ntype TFindCasesProps = {\n  query: string;\n  occurred_after: string;\n  occurred_before: string;\n};\n\ninterface IFindCasesBarProps {\n  query: string;\n  occurred_after: string;\n  occurred_before: string;\n  findCases(props: TFindCasesProps): void;\n}\ninterface IFindCasesBarState {\n  query: string;\n  occurred_after: string;\n  occurred_before: string;\n}\n\nconst QueryInput = styled.input`\n  display: flex;\n  width: ${(props: any) => props.width};\n  padding: 5px 10px;\n  border: 3px solid black;\n  font-family: inherit;\n  font-size: 20px;\n  outline: none;\n`;\nconst DateInput = styled.input`\n  display: flex;\n  width: ${(props: any) => props.width};\n  padding: 3px 10px;\n  border: 3px solid black;\n  font-family: inherit;\n  font-size: 20px;\n  outline: none;\n  margin-left: 5px;\n`;\nconst FindCasesBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\nconst DateInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 20%;\n`;\n\nclass FindCasesBar extends React.PureComponent<\n  IFindCasesBarProps,\n  IFindCasesBarState\n> {\n  static propTypes: { [key in keyof IFindCasesBarProps]: any } = {\n    query: PropTypes.string,\n    occurred_after: PropTypes.string,\n    occurred_before: PropTypes.string,\n    findCases: PropTypes.func\n  };\n\n  public static defaultProps = {\n    query: \"\",\n    occurred_after: \"0\",\n    occurred_before: \"0\",\n    findCases: () => {}\n  };\n  state = {\n    query: this.props.query,\n    occurred_after: this.props.occurred_after,\n    occurred_before: this.props.occurred_before\n  };\n\n  render() {\n    return (\n      <FindCasesBarWrapper>\n        <QueryInput\n          width=\"40%\"\n          value={this.state.query}\n          placeholder=\"Search case descriptions\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            this.setState({ query: e.target.value })\n          }\n        />\n\n        <DateInputWrapper>\n          From\n          <DateInput\n            width=\"80%\"\n            type=\"date\"\n            onChange={(e: any) => {\n              e = e || new Date();\n              let value: string = Date.parse(e.target.value)\n                .toString()\n                .substr(0, Date.parse(e.target.value).toString().length - 3);\n\n              this.setState({\n                occurred_after: value\n              });\n            }}\n          />\n        </DateInputWrapper>\n        <DateInputWrapper>\n          To\n          <DateInput\n            width=\"80%\"\n            type=\"date\"\n            onChange={(e: any) => {\n              e = e || new Date();\n              let value: string = Date.parse(e.target.value)\n                .toString()\n                .substr(0, Date.parse(e.target.value).toString().length - 3);\n\n              this.setState({\n                occurred_before: value\n              });\n            }}\n          />\n        </DateInputWrapper>\n\n        <BeautyBtn\n          value=\"Find Cases\"\n          doAction={() => {\n            this.props.findCases({\n              query: this.state.query,\n              occurred_after: this.state.occurred_after,\n              occurred_before: this.state.occurred_before\n            });\n          }}\n        />\n      </FindCasesBarWrapper>\n    );\n  }\n}\n\nexport default FindCasesBar;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport BeautyBtn from \"../beauty_btn/beauty_btn\";\nimport PropTypes from \"prop-types\";\n\ninterface IPaginatorProps {\n  page: number;\n  total_pages: number;\n  setPage(page: number): void;\n}\n\nconst PaginatorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 25px;\n  margin-bottom: 100px;\n`;\n\nclass Paginator extends React.PureComponent<IPaginatorProps> {\n  static propTypes: { [key in keyof IPaginatorProps]: any } = {\n    page: PropTypes.number,\n    total_pages: PropTypes.number,\n    setPage: PropTypes.func\n  };\n\n  renderPage(props: IPaginatorProps) {\n    return (\n      <BeautyBtn\n        inActive={props.page === this.props.page}\n        value={props.page.toString()}\n        doAction={() => {\n          props.setPage(props.page);\n        }}\n      />\n    );\n  }\n\n  generateIndexes() {\n    let pages = [];\n    if (this.props.total_pages === 0) {\n      return [];\n    } else if (this.props.total_pages === 1) {\n      return [1];\n    } else if (this.props.total_pages === 2) {\n      return [1, 2];\n    } else if (this.props.total_pages === 3) {\n      return [1, 2, 3];\n    } else if (this.props.total_pages === this.props.page) {\n      return [this.props.page - 2, this.props.page - 1, this.props.page];\n    } else if (this.props.page === 1) {\n      return [this.props.page, this.props.page + 1, this.props.page + 2];\n    } else {\n      return [this.props.page - 1, this.props.page, this.props.page + 1];\n    }\n    return [];\n  }\n\n  renderPages() {\n    let pages = new Array(3).fill(3);\n\n    let indexes: Array<number> = [];\n    indexes = this.generateIndexes();\n    return (\n      indexes.map((item: number) => {\n        return (\n          <div key={item}>\n            {\" \"}\n            {this.renderPage({\n              page: item,\n              total_pages: this.props.total_pages,\n              setPage: this.props.setPage\n            })}\n          </div>\n        );\n      }) || []\n    );\n  }\n  render() {\n    return (\n      <PaginatorWrapper>\n        <BeautyBtn\n          inActive={this.props.page === 1}\n          value=\"<< First\"\n          doAction={() => {\n            this.props.setPage(1);\n          }}\n        />\n        <BeautyBtn\n          inActive={this.props.page === 1}\n          value=\"< Prev\"\n          doAction={() => {\n            if (this.props.page - 1 >= 1)\n              this.props.setPage(this.props.page - 1);\n          }}\n        />\n        {this.renderPages()}\n        <BeautyBtn\n          inActive={this.props.page === this.props.total_pages}\n          value=\"Next >\"\n          doAction={() => {\n            if (this.props.page + 1 <= this.props.total_pages)\n              this.props.setPage(this.props.page + 1);\n          }}\n        />\n        <BeautyBtn\n          inActive={this.props.page === this.props.total_pages}\n          value=\"Last >>\"\n          doAction={() => {\n            this.props.setPage(this.props.total_pages);\n          }}\n        />\n      </PaginatorWrapper>\n    );\n  }\n}\n\nexport default Paginator;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport { get } from \"../../helpers/fetcher.js\";\nimport CaseListItem from \"../case_list_item/case_list_item\";\nimport CaseList from \"../case_list/case_list\";\nimport CaseCount from \"../case_count/case_count\";\nimport FindCasesBar from \"../find_cases_bar/find_cases_bar\";\nimport Paginator from \"../paginator/paginator\";\nimport { TCase } from \"../../types\";\nimport { parseIncedents } from \"../../helpers/parse_incedents\";\nimport { genParams } from \"../../helpers/fetcher\";\n\ninterface IIndexPageState {\n  cases: Array<TCase>;\n  all_cases: Array<TCase>;\n  per_page: number;\n  query: string;\n  occurred_after: string;\n  occurred_before: string;\n  page: number;\n  total_pages: number;\n  proximity: string;\n  incident_type: string;\n  is_loading: boolean;\n  is_error: boolean;\n}\n\ntype TCaseRequestProps = {\n  query: string;\n  per_page: number;\n  occurred_before: string;\n  occurred_after: string;\n  page: number;\n  proximity: string;\n  incident_type: string;\n};\n\ntype TPaginateCasesProps = {\n  cases: Array<TCase>;\n  page: number;\n  per_page: number;\n};\ntype TCalculateTotalPagesProps = {\n  cases: Array<TCase>;\n  per_page: number;\n};\n\nfunction paginateCases(props: TPaginateCasesProps) {\n  let max: number = props.per_page * props.page - 1;\n  let min: number = props.per_page * props.page - props.per_page;\n  let inRange = (index: number) => index <= max && index >= min;\n  return props.cases.filter((item: TCase, index: number) => inRange(index));\n}\n\nfunction calcTotalPages(props: TCalculateTotalPagesProps) {\n  return Math.ceil(props.cases.length / props.per_page);\n}\n\nclass IndexPage extends React.PureComponent<{}, IIndexPageState> {\n  state: IIndexPageState = {\n    cases: [],\n    all_cases: [],\n    per_page: 5,\n    total_pages: 1,\n    query: \"\",\n    occurred_before: \"\",\n    occurred_after: \"\",\n    page: 1,\n    proximity: \"52.517038,13.401267\",\n    incident_type: \"theft\",\n    is_loading: true,\n    is_error: false\n  };\n\n  getCases(props: TCaseRequestProps) {\n    this.setState({ is_loading: true });\n    get(`https://bikewise.org:443/api/v2/incidents?${genParams(props)}`)\n      .then(response => {\n        let _cases: Array<TCase> = parseIncedents(response.incidents);\n        this.setState({\n          is_loading: false,\n          total_pages: calcTotalPages({\n            cases: _cases,\n            per_page: this.state.per_page\n          }),\n          cases: paginateCases({\n            cases: _cases,\n            page: this.state.page,\n            per_page: this.state.per_page\n          }),\n          all_cases: _cases\n        });\n      })\n      .catch(err => {\n        this.setState({ is_error: true });\n      });\n  }\n\n  componentDidMount() {\n    this.getCases({\n      query: \"\",\n      per_page: 1000000000000000000,\n      occurred_before: \"\",\n      occurred_after: \"\",\n      page: 1,\n      proximity: this.state.proximity,\n      incident_type: this.state.incident_type\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <FindCasesBar\n          query={this.state.query}\n          occurred_after={this.state.occurred_after}\n          occurred_before={this.state.occurred_before}\n          findCases={({ query, occurred_after, occurred_before }) => {\n            this.setState(\n              { query, occurred_after, occurred_before, page: 1 },\n              () =>\n                this.getCases({\n                  query: this.state.query,\n                  per_page: 1000000000000000000,\n                  occurred_before: this.state.occurred_before,\n                  occurred_after: this.state.occurred_after,\n                  page: 1,\n                  proximity: this.state.proximity,\n                  incident_type: this.state.incident_type\n                })\n            );\n          }}\n        />\n        {this.state.is_error ? (\n          <div>Error </div>\n        ) : this.state.is_loading ? (\n          <div>Loading ... </div>\n        ) : this.state.all_cases.length == 0 ? (\n          <div>No results</div>\n        ) : (\n          <React.Fragment>\n            <CaseCount case_count={this.state.all_cases.length} />\n            <CaseList cases={this.state.cases} />\n            <Paginator\n              page={this.state.page}\n              total_pages={this.state.total_pages}\n              setPage={(page: number) =>\n                this.setState({\n                  page,\n                  cases: paginateCases({\n                    cases: this.state.all_cases,\n                    page: page,\n                    per_page: this.state.per_page\n                  })\n                })\n              }\n            />\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default IndexPage;\n","export function parseIncedents(incidents: any) {\n  return [...incidents]\n    .filter((item: any) => item.title != null)\n    .map((item: any) => {\n      return {\n        title: item.title || \"\",\n        description: item.description || \"\",\n        id: item.id || \"\",\n        thumbnail_img: item.media.image_url_thumb || \"/no_img.png\",\n        occurred_at: parseInt(item.occurred_at) || 0,\n        address: item.address || \"\"\n      };\n    });\n}\n","import * as React from \"react\";\nimport styled from \"../../theme\";\n\nconst HeaderWrapper = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  color: black;\n  text-decoration: none;\n`;\nconst HeaderTextWrapper = styled.div`\n  margin-left: 20px;\n`;\nconst HeaderBigText = styled.div`\n  margin-bototm: -20px;\n  font-size: 55px;\n`;\nconst HeaderLittleText = styled.div`\n  font-size: 30px;\n`;\nconst HeaderLogo = styled.img`\n  height: 60px;\n`;\n\nclass Header extends React.PureComponent {\n  render() {\n    return (\n      <HeaderWrapper href=\"/\">\n        <HeaderLogo src=\"/fav.ico\" />\n        <HeaderTextWrapper>\n          <HeaderBigText>Police Department of Berlin</HeaderBigText>\n          <HeaderLittleText>Stolen bykes</HeaderLittleText>\n        </HeaderTextWrapper>\n      </HeaderWrapper>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport styled from \"../../theme\";\nimport { TCase } from \"../../types\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { get } from \"../../helpers/fetcher.js\";\n//@ts-ignore\nimport GoogleMap from \"google-map-react\";\nimport PropTypes from \"prop-types\";\n\ninterface ICaseRouteParamTypes {\n  id: string;\n}\n\ninterface ICaseRouteParams extends ICaseRouteParamTypes {\n  params: ICaseRouteParamTypes;\n}\n\ninterface ICaseProps extends ICaseRouteParams {\n  match: ICaseRouteParams;\n}\ninterface ICaseState {\n  title: string;\n  address: string;\n  description: string;\n  occurred_at: string;\n  img: string;\n  coordinates: Array<number>;\n  is_loaded: boolean;\n  is_error: boolean;\n}\n\nconst CaseWrapper = styled.div`\n  margin-bottom: 100px;\n`;\nconst Marker = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: red;\n  opacity: 0.5;\n`;\nconst CaseImg = styled.img`\n  width: 100%;\n`;\nconst CaseImgWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 300px;\n  margin-top: 30px;\n`;\nconst ImgDescWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst DescWrapper = styled.div`\n  width: 100%;\n  margin-left: 30px;\n`;\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: 300px;\n`;\ntype TMapMarker = {\n  text: string;\n  lat: number;\n  lng: number;\n};\n\nclass Case extends React.PureComponent<ICaseProps, ICaseState> {\n  static propTypes: { [key in keyof ICaseProps]: any } = {\n    match: PropTypes.object,\n    params: PropTypes.object,\n    id: PropTypes.string\n  };\n\n  public static defaultProps = {\n    match: { params: { id: \"\" } },\n    params: { id: \"\" },\n    id: \"\"\n  };\n\n  state = {\n    title: \"\",\n    address: \"\",\n    description: \"\",\n    occurred_at: \"\",\n    img: \"\",\n    coordinates: [52.517038, 13.401267],\n    is_loaded: false,\n    is_error: false\n  };\n  componentDidMount() {\n    let id: string = this.props.match.params.id;\n    get(`https://bikewise.org:443/api/v2/incidents/${id}`).then(response => {\n      const _date: Date = new Date(response.incident.occurred_at * 1000);\n      this.setState({\n        title: response.incident.title,\n        address: response.incident.address,\n        description: response.incident.description,\n        occurred_at: _date.toDateString(),\n        img: response.incident.media.image_url\n      });\n      get(\n        `https://bikewise.org:443/api/v2/locations?proximity_square=100&incident_type=theft&proximity=52.517038,13.401267`\n      ).then(response => {\n        response.features\n          .filter((item: any) => item.properties.id == id)\n          .forEach((item: any) => {\n            this.setState({\n              coordinates: item.geometry.coordinates.reverse()\n            });\n          });\n      });\n    });\n  }\n\n  renderGoogleMap() {\n    return (\n      <MapWrapper>\n        <GoogleMap\n          bootstrapURLKeys={{\n            key: \"AIzaSyDaxTbb824BrjJMUfBeCc5Cxv6sbuwYnhs\"\n          }}\n          center={this.state.coordinates}\n          defaultZoom={11}\n        >\n          <Marker\n            lat={this.state.coordinates[0]}\n            lng={this.state.coordinates[1]}\n            text=\"\"\n          />\n        </GoogleMap>\n      </MapWrapper>\n    );\n  }\n  render() {\n    return (\n      <CaseWrapper>\n        {this.renderGoogleMap()}\n        <h1>{this.state.title}</h1>\n        <h3>{`Stolen ${this.state.occurred_at} at ${this.state.address}`}</h3>\n        <ImgDescWrapper>\n          <CaseImgWrapper>\n            <CaseImg src={this.state.img} alt=\"N/A\" />\n          </CaseImgWrapper>\n          <DescWrapper>\n            <h1>DESCRIPTION OF INCEDENT</h1>\n            <h3>{this.state.description}</h3>\n          </DescWrapper>\n        </ImgDescWrapper>\n      </CaseWrapper>\n    );\n  }\n}\n\nexport default Case;\n","import * as React from \"react\";\nimport styled from \"./theme\";\nimport { get } from \"./helpers/fetcher.js\";\nimport IndexPage from \"./components/index_page/index_page\";\nimport Header from \"./components/header/header\";\nimport Case from \"./components/case/case\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst AppWrapper = styled.div`\n  padding: 0% 10%;\n`;\n\nconst AppRouter = (\n  <div>\n    <Router>\n      <Route path=\"/\" exact component={IndexPage} />\n      <Route path=\"/case/:id\" component={Case} />\n    </Router>\n  </div>\n);\n\nclass App extends React.PureComponent {\n  render() {\n    return (\n      <AppWrapper>\n        <Header />\n        {AppRouter}\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}